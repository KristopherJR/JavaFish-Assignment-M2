#BlueJ class context
comment0.params=model\ tex\ scale
comment0.target=Pet(java.lang.String,\ java.lang.String,\ double)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Pet.\r\n\ Calls\ the\ constructor\ of\ its\ parent\ class\ DisplayObject,\ passing\ in\ parameters\ provided\ by\ each\ child\ of\ the\ Pet\ class.\r\n\ \r\n\ @param\ model\ \ \ \ The\ model\ of\ the\ Pet,\ as\ passed\ by\ the\ child\ class.\r\n\ @param\ tex\ \ \ \ \ The\ texture\ of\ the\ Pet,\ as\ passed\ by\ the\ child\ class.\r\n\ @param\ scale\ \ \ \ \ The\ scale\ of\ the\ Pet,\ as\ passed\ by\ the\ child\ class.\r\n
comment1.params=MAX\ MIN
comment1.target=void\ setSpeed(double,\ double)
comment1.text=\r\n\ METHOD\:\ set\ the\ swim\ speed\ of\ the\ Pet\ with\ a\ random\ number\ between\ 0.005\ -\ 0.05\r\n\ \r\n\ @param\ MAX\ \ \ the\ maximum\ speed\ the\ Pet\ can\ go\ as\ specified\ by\ the\ client.\r\n\ @param\ MIN\ \ \ the\ minimum\ speed\ the\ Pet\ can\ go\ as\ specified\ by\ the\ client.\r\n\ \r\n\ @return\ \ \ \ \ \ void\r\n
comment10.params=
comment10.target=double\ getY()
comment10.text=\r\n\ METHOD\:\ GET\ the\ y\ co-ordinate\ of\ the\ Pet.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ current\ y\ co-ordinate\ of\ the\ Pet.\ \r\n
comment11.params=
comment11.target=boolean\ getDirection()
comment11.text=\r\n\ METHOD\:\ GET\ the\ direction\ of\ the\ Pet.\ 'direction'\ is\ a\ boolean\ value,\ with\ the\ follow\ representations\:\r\n\ 'true'\ \=\ This\ Pet\ is\ swimming\ RIGHT.\r\n\ 'false'\ \=\ This\ Pet\ is\ swimming\ LEFT.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ current\ direction\ this\ Pet\ is\ swimming,\ TRUE\ \=\ RIGHT,\ FALSE\ \=\ LEFT.\ \r\n
comment12.params=
comment12.target=void\ validateSpeed()
comment12.text=\r\n\ METHOD\:\ used\ to\ validate\ that\ the\ speed\ this\ Pet\ has\ been\ assigned\ is\ within\ the\ correct\ range,\ if\ it\ isn't\ an\ OutOfBoundsException\ is\ thrown\ which\ can\ be\ caught\ at\ another\ part\ in\ the\ program.\r\n\ \r\n\ @throws\ OutOfBoundsException\r\n\ \r\n\ @return\ \ \ \ \ \ void\ \r\n
comment13.params=
comment13.target=void\ update()
comment13.text=\r\n\ METHOD\:\ to\ set\ the\ next\ frame\ of\ the\ simulation,\ called\ on\ each\ pass\ of\ the\ simulation\ -\ Method\ form\ Marc\ Price,\ edited\ by\ Kristopher\ Randle.\r\n\r\n@return\ \ \ void\r\n
comment14.params=
comment14.target=void\ generateRandomXSpeed()
comment14.text=\r\n\ METHOD\:\ used\ to\ generate\ a\ new\ random\ xSpeed\ for\ this\ Pet,\ within\ the\ specified\ range\ (0.005\ -\ 0.05).\ This\ is\ used\ to\ emulate\ random\ bursts\ of\ speed\ within\ the\ Fish.\r\n\r\n@return\ \ \ void\r\n
comment15.params=
comment15.target=void\ generateRandomYSpeed()
comment15.text=\r\n\ METHOD\:\ used\ to\ generate\ a\ new\ random\ ySpeed\ for\ this\ Pet,\ within\ the\ specified\ range\ (0.005\ -\ 0.05).\ This\ is\ used\ to\ emulate\ random\ bursts\ of\ speed\ within\ the\ Fish.\r\n\r\n@return\ \ \ void\r\n
comment16.params=
comment16.target=void\ inBounds()
comment16.text=\r\n\ METHOD\:\ This\ method\ is\ the\ aquariums\ main\ boundary\ detection\ system.\ The\ "Pets"\ use\ this\ to\ know\ if\ they\ hit\ a\ wall,\ if\ they\ do\ they\ will\ swim\ in\ the\ opposite\ direction\ from\ which\ they\ came.\r\n\ Colliding\ with\ the\ RIGHT\ wall\ or\ the\ ROOF\ will\ result\ in\ this\ Pet\ receiving\ a\ random\ new\ xSpeed\ and\ ySpeed,\ this\ creates\ random\ speed\ bursts\ in\ the\ Pets.\r\n\ \r\n\ @return\ \ void\r\n
comment2.params=
comment2.target=void\ setSpeed()
comment2.text=\r\n\ METHOD\:\ set\ the\ swim\ speed\ of\ the\ Pet\ to\ a\ default\ value\ if\ parameters\ are\ not\ provided\ for\ it.\ (Method\ Overloading)\r\n\r\n@return\ \ \ \ \ \ void\r\n
comment3.params=x\ y\ z
comment3.target=void\ setPosition(double,\ double,\ double)
comment3.text=\r\n\ METHOD\:\ set\ the\ position\ of\ the\ Pet\ in\ the\ aquarium\ -\ Method\ from\ Marc\ Price.\r\n\ \r\n\ This\ method\ can\ be\ used\ to\ specify\ the\ exact\ starting\ location\ of\ the\ Pet\ if\ the\ user\ wishes\ by\ providing\ an\ x,\ y\ and\ z\ parameter.\ Not\ providing\ will\ give\ them\r\n\ a\ randomly\ generated\ one\ via\ the\ other\ instance\ of\ this\ overloaded\ method.\r\n\ \r\n\ @param\ \ x\ \ \ \ the\ rqd\ position\ along\ the\ x\ axis\r\n\ @param\ \ y\ \ \ \ the\ rqd\ position\ along\ the\ y\ axis\r\n\ @param\ \ z\ \ \ \ the\ rqd\ position\ along\ the\ z\ axis\r\n\ \r\n\ @return\ \ \ \ \ \ void\ \r\n
comment4.params=
comment4.target=void\ setPosition()
comment4.text=\r\n\ METHOD\:\ set\ the\ position\ of\ the\ Pet\ within\ the\ aquarium\ -\ Method\ from\ Marc\ Price,\ refactored\ by\ Kristopher\ Randle.\r\n\r\n\ X\ and\ Y\ is\ randomly\ set\ between\ the\ bounds\ of\ the\ aquarium\ by\ using\ the\ windows\ height\ and\ width.\ Not\ specifying\ a\ Pets\ x\ and\ y\ location\ will\ give\ them\ a\ randomly\r\n\ generated\ one.\ (Method\ Overloading)\r\n\ \r\n\ @return\ \ \ \ \ \ void\r\n
comment5.params=x\ y\ z
comment5.target=void\ setOrientation(double,\ double,\ double)
comment5.text=\r\n\ METHOD\:\ set\ the\ orientation\ of\ the\ Pet\ in\ the\ aquarium\ -\ Method\ from\ Marc\ Price.\r\n\ \r\n\ @param\ \ x\ \ \ \ orientation\ about\ the\ x\ axis\r\n\ @param\ \ y\ \ \ \ orientation\ about\ the\ y\ axis\r\n\ @param\ \ z\ \ \ \ orientation\ about\ the\ z\ axis\r\n\ \r\n\ @return\ \ \ \ \ \ void\ \r\n
comment6.params=
comment6.target=double\ getScale()
comment6.text=\r\n\ METHOD\:\ GET\ the\ scale\ of\ the\ Pet.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ scale\ of\ the\ Pet.\ \r\n
comment7.params=
comment7.target=double\ getXSpeed()
comment7.text=\r\n\ METHOD\:\ GET\ the\ xSpeed\ of\ the\ Pet.\r\n\ \r\n\ @return\ \ \ \ \ \ the\ current\ speed\ of\ this\ Pet\ on\ the\ X\ axis.\ \r\n
comment8.params=
comment8.target=double\ getYSpeed()
comment8.text=\r\n\ METHOD\:\ GET\ the\ ySpeed\ of\ the\ Pet.\r\n\ \r\n\ @return\ \ \ \ \ \ the\ current\ speed\ of\ this\ Pet\ on\ the\ Y\ axis.\ \r\n
comment9.params=
comment9.target=double\ getX()
comment9.text=\r\n\ METHOD\:\ GET\ the\ x\ co-ordinate\ of\ the\ Pet.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ current\ x\ co-ordinate\ of\ the\ Pet.\ \r\n
numComments=17
